# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load your wine quality dataset into a pandas DataFrame (assuming you have a CSV file)
data = pd.read_csv('wine_quality_data.csv')

# Assuming 'quality' is your target variable and 'features' are your input features
X = data[['feature1', 'feature2', 'feature3']]  # Replace with your feature columns
y = data['quality']  # Replace with your target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Fit the model on the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Calculate and print evaluation metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")

# Visualize the regression line (not recommended for discrete target variable)
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, y_pred, color='red', linewidth=2)
plt.xlabel('Input Features')
plt.ylabel('Wine Quality')
plt.title('Linear Regression Model')
plt.show()
